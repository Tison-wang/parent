<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <settings>
        <!--打印查询语句 &ndash;&gt;-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!--这个配置使全局的映射器(二级缓存)启用或禁用缓存-->
        <setting name="cacheEnabled" value="true"/>
        <!--延迟加载总开关-->
        <!--当禁用时，所以关联对象都会即时加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--侵入式延迟加载开关. 设置true时，为侵入式延迟加载；设置false时，为深入式延迟加载-->
        <!--执行对主加载对象的查询时，不会执行对关联对象的查询。但当要访问主加载对象的详情属性时，就会马上执行关联对象的select查询-->
        <!--深入式延迟加载: 只有当真正访问关联对象的属性时，才会执行对关联对象的select查询，用到哪个id查询哪条关联数据-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <typeAliases>
        <typeAlias alias="Integer" type="java.lang.Integer"/>
        <typeAlias alias="Long" type="java.lang.Long"/>
        <typeAlias alias="HashMap" type="java.util.HashMap"/>
        <typeAlias alias="LinkedHashMap" type="java.util.LinkedHashMap"/>
        <typeAlias alias="ArrayList" type="java.util.ArrayList"/>
        <typeAlias alias="LinkedList" type="java.util.LinkedList"/>
        <typeAlias alias="User" type="com.spring.boot.model.User"/>
        <typeAlias alias="UserVO" type="com.spring.boot.model.UserVO"/>
    </typeAliases>

    <plugins>
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <property name="dialect" value="mysql"/>
            <property name="offsetAsPageNum" value="false"/>
            <property name="rowBoundsWithCount" value="false"/>
            <property name="pageSizeZero" value="true"/>
            <property name="reasonable" value="false"/>
            <property name="supportMethodsArguments" value="false"/>
            <property name="returnPageInfo" value="none"/>
        </plugin>
        <plugin interceptor="com.spring.boot.api.interceptor.SQLStatsInterceptor">
            <property name="show_sql" value="true"/>
            <property name="dialect" value="mysql"/>
        </plugin>
        <!--<plugin interceptor="com.spring.boot.api.interceptor.queryInterceptor"></plugin>-->
    </plugins>

</configuration>